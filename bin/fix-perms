#!/usr/bin/env bash
## Fix file permissions
##
## Some of the file permissions are broken or mis-aligned as a result
## of the various Docker and filesystem layers.
##
## Paths used align with the volume mappings in the docker-compose
## and build configuration files.
##
#: exec_target = cli

printf "$INFO_SLUG Fixing up file permissions for development...\n"
# Ensure Apache manages the files directory.
if [ ! -e "/var/www/project/sites/default/files" ]; then
  mkdir /var/www/project/sites/default/files
fi
chmod 755 /var/www/project/sites/default/files
# Restore write access to Drupal settings directory after site install.
# This does not change the settings.php file itself, but helps avoid
# issues such as changes to settings across git branches.
chmod 755 /var/www/project/sites/default
# Set file ownership for apache user.  Don't fail if user doesn't exist.
if [ -z $WEB_USER ]; then
  WEB_USER=`ls -ld /var/www/project/sites/default/files | awk '{print $3}'`
fi
chown -R ${WEB_USER}:${WEB_USER} /var/www/project/sites/default/files &>/dev/null || true
chown -R ${WEB_USER}:${WEB_USER} /var/www/${REL_DOCROOT} &>/dev/null || true
